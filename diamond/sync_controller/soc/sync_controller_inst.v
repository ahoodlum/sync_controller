//   ==================================================================
//   >>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
//   ------------------------------------------------------------------
//   Copyright (c) 2006-2011 by Lattice Semiconductor Corporation
//   ------------------------------------------------------------------
//   ALL RIGHTS RESERVED
//
//   IMPORTANT: THIS FILE IS AUTO-GENERATED BY THE LATTICEMICO SYSTEM.
//
//   Permission:
//
//      Lattice Semiconductor grants permission to use this code
//      pursuant to the terms of the Lattice Semiconductor Corporation
//      Open Source License Agreement.
//
//   Disclaimer:
//
//      Lattice Semiconductor provides no warranty regarding the use or
//      functionality of this code. It is the user's responsibility to
//      verify the user’s design for consistency and functionality through
//      the use of formal verification methods.
//
//   --------------------------------------------------------------------
//
//                  Lattice Semiconductor Corporation
//                  5555 NE Moore Court
//                  Hillsboro, OR 97214
//                  U.S.A
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                         503-286-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
//   --------------------------------------------------------------------
//
//      Project:           sync_controller
//      File:              sync_controller_inst.v
//      Date:              Tue, 30 Jul 2013 22:58:31 PDT
//      Version:           2.0.0.154
//      Targeted Family:   MachXO2
//
//   =======================================================================

// Attn : This file is used for VHDL Wrapper

sync_controller_vhd sync_controller_u ( 
.clk_i(clk_i),
.reset_n(reset_n)
, .LEDPIO_OUT(LEDPIO_OUT) // [4-1:0]
, .uartSIN(uartSIN) // 
, .uartSOUT(uartSOUT) // 
, .slave_passthruclk(slave_passthruclk) // 
, .slave_passthrurst(slave_passthrurst) // 
, .slave_passthruslv_adr(slave_passthruslv_adr) // [32-1:0]
, .slave_passthruslv_master_data(slave_passthruslv_master_data) // [8-1:0]
, .slave_passthruslv_slave_data(slave_passthruslv_slave_data) // [8-1:0]
, .slave_passthruslv_strb(slave_passthruslv_strb) // 
, .slave_passthruslv_cyc(slave_passthruslv_cyc) // 
, .slave_passthruslv_ack(slave_passthruslv_ack) // 
, .slave_passthruslv_err(slave_passthruslv_err) // 
, .slave_passthruslv_rty(slave_passthruslv_rty) // 
, .slave_passthruslv_sel(slave_passthruslv_sel) // [3:0] 
, .slave_passthruslv_we(slave_passthruslv_we) // 
, .slave_passthruslv_bte(slave_passthruslv_bte) // [1:0] 
, .slave_passthruslv_cti(slave_passthruslv_cti) // [2:0] 
, .slave_passthruslv_lock(slave_passthruslv_lock) // 
, .slave_passthruintr_active_high(slave_passthruintr_active_high) // 
);
